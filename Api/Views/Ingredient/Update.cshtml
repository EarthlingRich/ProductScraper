@model IngredientViewModel
@{
    ViewData["Title"] = Model.Name;
}

<script type="text/javascript">
    document.addEventListener('DOMContentLoaded', function() {
        var keywords = [
            @foreach(var keyword in Model.Keywords)
            {
                <text>{tag: '@keyword'},</text>
            }
        ];
        var allergyKeywords = [
            @foreach(var allergyKeyword in Model.AllergyKeywords)
            {
                <text>{tag: '@allergyKeyword'},</text>
            }
        ];
        Ingredient.initUpdate(keywords, allergyKeywords);
    });
</script>

<h3 class="page-title">@Model.Name</h3>
@using (Html.BeginForm("Update", "Ingredient", FormMethod.Post))
{
    <div class="row">
        @Html.HiddenFor(_ => _.Id)
        @Html.HiddenFor(_ => _.KeywordsString)
        @Html.HiddenFor(_ => _.AllergyKeywordsString)
        <div class="clearfix">
            <div class="input-field col s4">
                @Html.TextBoxFor(_ => _.Name)
                @Html.LabelFor(_ => _.Name)
            </div>
        </div>
        <div class="clearfix">
            <div class="input-field col s4">
                @Html.DropDownListFor(_ => Model.VeganType, Html.GetEnumSelectList<VeganType>())
                @Html.LabelFor(_ => Model.VeganType)
            </div>
        </div>
        <div class="col s12">
            <div id="keywords-chips" class="chips input-field">
                <div class="custom-form-label">@Html.DisplayNameFor(_ => _.Keywords)</div>
                <input class="input">
            </div>
        </div>
        <div class="col s12">
            <div id="allergykeywords-chips" class="chips input-field">
                <div class="custom-form-label">@Html.DisplayNameFor(_ => _.AllergyKeywords)</div>
                <input class="input">
            </div>
        </div>
        <div class="col s12">
            <button class="btn waves-effect waves-light" type="submit">@CommonTerms.Action_Save</button>
        </div>
    </div>
}