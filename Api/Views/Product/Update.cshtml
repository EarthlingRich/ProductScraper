@using Api.Controllers

@model ProductUpdateViewModel

@{
    ViewData["Title"] = Model.Name;
}

<h3 class="page-title clearfix">
    <span class="float-left">@Model.Name</span>
    @using (Html.BeginForm(nameof(ProductController.Delete), ProductController.RouteName, FormMethod.Post, new { @class = "right" }))
    {
        @Html.Hidden("Id", Model.Request.Id)
        <button class="btn btn-danger product__delete-button float-right" type="submit"><i class="material-icons" aria-hidden="true">delete</i></button>
    }
    <a href="@Model.Url" target="_blank" class="btn btn-primary float-right"><i class="material-icons" aria-hidden="true">local_grocery_store</i></a>
</h3>
<img class="float-right" src="@Model.ImageUrl" />
@using (Html.BeginForm(nameof(ProductController.Update), ProductController.RouteName, FormMethod.Post))
{

    @Html.HiddenFor(_ => _.Request.Id)
    <div class="form-group">
        <label>@Html.DisplayNameFor(_ => _.ProductCategories)</label>
        <div>
            @foreach (var productCategorie in Model.ProductCategories)
            {
                <span class="badge badge-primary">@productCategorie</span>
            }
        </div>
    </div>
    <div class="form-group">
        <label>@Html.DisplayNameFor(_ => _.Ingredients)</label>
        <div class="form-control-plaintext">@Model.Ingredients</div>
    </div>
    @if (!string.IsNullOrEmpty(Model.AllergyInfo))
    {
        <div class="form-group">
            <label>@Html.DisplayNameFor(_ => _.AllergyInfo)</label>
            <div class="form-control-plaintext">@Model.AllergyInfo</div>
        </div>
    }
    @if (Model.MatchedIngredients.Any())
    {
        <div class="form-group">
            <label>@Html.DisplayNameFor(_ => _.MatchedIngredients)</label>
            @foreach (var matchedIngredient in Model.MatchedIngredients)
            {
                <span class="badge badge-primary">@matchedIngredient.Name</span>
            }
        </div>
    }
    <div class="form-group">
        @Html.LabelFor(_ => _.Request.VeganType)
        @Html.DropDownListFor(_ => _.Request.VeganType, Html.GetEnumSelectList<VeganType>(), new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.EditorFor(_ => _.Request.IsManufacturerAdvertisedVegan, new { @class = "form-check-input", id = "IsManufacturerAdvertisedVegan" })
        @Html.LabelFor(_ => _.Request.IsManufacturerAdvertisedVegan, new { @for = "IsManufacturerAdvertisedVegan" })
    </div>
    <div class="form-group">
        @Html.LabelFor(_ => _.Request.VeganDescription)
        @Html.TextAreaFor(_ => _.Request.VeganDescription, new { @class = "form-control"})
    </div>
    <div>@CommonTerms.Common_Status</div>
    <div class="form-group">
        @Html.EditorFor(_ => _.Request.IsProcessed, new { @class = "form-check-input", id = "IsProcessed" })
        @Html.LabelFor(_ => _.Request.IsProcessed, new { @for = "IsProcessed" })
    </div>
    <div class="form-group">
        <button class="btn btn-primary" type="submit">@CommonTerms.Action_Save</button>
        <a href="@Url.Action(nameof(ProductController.Process), ProductController.RouteName, new { id = Model.Request.Id })" class="btn btn-secondary">@CommonTerms.Action_Process</a>
    </div>
    <h5 class="subcontent-title">@Html.DisplayNameFor(_ => _.WorkloadItems)</h5>
    <table class="table table-striped">
        <thead>
            <tr>
                <th>@DomainTerms.WorkloadItem_Message</th>
                <th>@DomainTerms.WorkloadItem_CreatedOn</th>
                <th>@DomainTerms.WorkloadItem_IsProcessed</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @for (var i = 0; i < Model.Request.WorkloadItems.Count; i++)
            {
                var viewModel = @Model.WorkloadItems.Single(_ => _.Id == Model.Request.WorkloadItems[i].Id);
                <tr id="workload-item-row-@Model.Request.WorkloadItems[i].Id">
                    <td>
                        @viewModel.Message
                        @Html.HiddenFor(_ => _.Request.WorkloadItems[i].Id)
                    </td>
                    <td>@viewModel.CreatedOn</td>
                    <td>
                        <div class="form-check">
                            @Html.CheckBoxFor(_ => _.Request.WorkloadItems[i].IsProcessed, new { @class = "form-check-input" })
                        </div>
                    </td>
                    <td>
                        <a class="btn btn-link" onclick="Product.deleteWorkloadItem(@Model.Request.WorkloadItems[i].Id)"><i class="material-icons" aria-hidden="true">delete</i></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
<h5 class="subcontent-title">@Html.DisplayNameFor(_ => _.ProductActivities)</h5>
<table class="table table-striped">
    <thead>
        <tr>
            <th>@DomainTerms.WorkloadItem_Message</th>
            <th>@DomainTerms.WorkloadItem_Message</th>
            <th>@DomainTerms.WorkloadItem_CreatedOn</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var productActivity in Model.ProductActivities)
        {
            <tr id="product-activity-row-@productActivity.Id">
                <td>@productActivity.Type</td>
                <td>@productActivity.Detail</td>
                <td>@productActivity.CreatedOn</td>
                <td>
                    <a class="btn-flat waves-effect waves-light" onclick="Product.deleteProductActivity(@productActivity.Id)"><i class="material-icons" aria-hidden="true">delete</i></a>
                </td>
            </tr>
        }
    </tbody>
</table>
