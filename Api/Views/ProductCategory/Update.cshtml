@using Api.Controllers

@model ProductCategoryUpdateViewModel

@{
    ViewData["Title"] = Model.Request.Name;
}

<script type="text/javascript">
    $(function() {
        ProductCategory.initUpdate();
    });
</script>

<h3 class="page-title">
    @Model.Request.Name
    @using (Html.BeginForm(nameof(ProductCategoryController.Delete), ProductCategoryController.RouteName, FormMethod.Post, new { @class = "right" }))
    {
        @Html.Hidden("Id", Model.Request.Id)
        <button class="btn-floating btn-large waves-effect waves-light red darken-1" type="submit"><i class="material-icons" aria-hidden="true">delete</i></button>
    }
</h3>
@using (Html.BeginForm(nameof(ProductCategoryController.Update), ProductCategoryController.RouteName, FormMethod.Post))
{
    @Html.HiddenFor(_ => _.Request.Id)
    <div class="row">
        <div class="input-field col s12">
            @Html.TextBoxFor(_ => _.Request.Name)
            @Html.LabelFor(_ => _.Request.Name)
        </div>
        @foreach (var storeCategory in Model.Request.StoreCategories)
        {
            <div class="input-field col s3">
                @Html.DropDownListFor(_ => storeCategory.StoreType, Html.GetEnumSelectList<StoreType>())
            </div>
            <div class="input-field col s9">
                @Html.EditorFor(_ => storeCategory.Url)
            </div>
        }
        <div class="col s12">
            <button class="btn waves-effect waves-light" type="submit">@CommonTerms.Action_Save</button>
        </div>
    </div>
}